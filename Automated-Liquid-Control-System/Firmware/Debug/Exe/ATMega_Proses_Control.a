;/*******************************************************
;Chip type               : ATmega128
;Program type            : Application
;AVR Core Clock frequency: 10,000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 1024
;*******************************************************/
;
;#include <mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <stdio.h>
;
;// Alphanumeric LCD functions
;#include <alcd.h>
;
;// Declare your global variables here
;unsigned char add, start, shutdown;
;
;// External Interrupt 0 service routine
;interrupt [EXT_INT0] void ext_int0_isr(void)
; 0000 0016 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0017 // Place your code here
; 0000 0018 shutdown=0;
;PCODE: $0000000F VOL: 0
; 0000 0019 }
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;
;// External Interrupt 1 service routine
;interrupt [EXT_INT1] void ext_int1_isr(void)
; 0000 001D {
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 001E // Place your code here
; 0000 001F start=1;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0020 }
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;
;// External Interrupt 2 service routine
;interrupt [EXT_INT2] void ext_int2_isr(void)
; 0000 0024 {
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0025 // Place your code here
; 0000 0026 add+=1;
;PCODE: $0000001C VOL: 0
; 0000 0027 }
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;
;// External Interrupt 3 service routine
;interrupt [EXT_INT3] void ext_int3_isr(void)
; 0000 002B {
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 002C // Place your code here
; 0000 002D add=0;
;PCODE: $00000022 VOL: 0
; 0000 002E }
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;
;void main(void)
; 0000 0031 {
;PCODE: $00000026 VOL: 0
; 0000 0032 // Declare your local variables here
; 0000 0033 unsigned char text[16];
; 0000 0034 
; 0000 0035 // Input/Output Ports initialization
; 0000 0036 // Port A initialization
; 0000 0037 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0038 DDRA=(1<<DDA7) | (1<<DDA6) | (1<<DDA5) | (1<<DDA4) | (1<<DDA3) | (1<<DDA2) | (1<<DDA1) | (1<<DDA0);
;PCODE: $00000027 VOL: 0
;	text -> Y+0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0039 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=1 Bit2=0 Bit1=0 Bit0=0
; 0000 003A PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (1<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 003B 
; 0000 003C // Port C initialization
; 0000 003D // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 003E DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 003F // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 0040 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0041 
; 0000 0042 // Port D initialization
; 0000 0043 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0044 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0045 // State: Bit7=T Bit6=T Bit5=T Bit4=P Bit3=P Bit2=P Bit1=P Bit0=P
; 0000 0046 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (1<<PORTD4) | (1<<PORTD3) | (1<<PORTD2) | (1<<PORTD1) | (1<<PORTD0);
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0047 
; 0000 0048 // Port E initialization
; 0000 0049 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 004A DDRE=(0<<DDE7) | (0<<DDE6) | (0<<DDE5) | (0<<DDE4) | (0<<DDE3) | (0<<DDE2) | (0<<DDE1) | (0<<DDF0);
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 004B // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=P Bit1=P Bit0=P
; 0000 004C PORTE=(0<<PORTE7) | (0<<PORTE6) | (0<<PORTE5) | (0<<PORTE4) | (0<<PORTE3) | (1<<PORTE2) | (1<<PORTE1) | (1<<PORTE0);
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 004D 
; 0000 004E // External Interrupt(s) initialization
; 0000 004F // INT0: On
; 0000 0050 // INT0 Mode: Falling Edge
; 0000 0051 // INT1: On
; 0000 0052 // INT1 Mode: Falling Edge
; 0000 0053 // INT2: On
; 0000 0054 // INT2 Mode: Falling Edge
; 0000 0055 // INT3: On
; 0000 0056 // INT3 Mode: Falling Edge
; 0000 0057 EICRA=(1<<ISC31) | (0<<ISC30) | (1<<ISC21) | (0<<ISC20) | (1<<ISC11) | (0<<ISC10) | (1<<ISC01) | (0<<ISC00);
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0058 EICRB=(0<<ISC71) | (0<<ISC70) | (0<<ISC61) | (0<<ISC60) | (0<<ISC51) | (0<<ISC50) | (0<<ISC41) | (0<<ISC40);
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0059 EIMSK=(0<<INT7) | (0<<INT6) | (0<<INT5) | (0<<INT4) | (1<<INT3) | (1<<INT2) | (1<<INT1) | (1<<INT0);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 005A EIFR=(0<<INTF7) | (0<<INTF6) | (0<<INTF5) | (0<<INTF4) | (1<<INTF3) | (1<<INTF2) | (1<<INTF1) | (1<<INTF0);
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 005B 
; 0000 005C // Alphanumeric LCD initialization
; 0000 005D // Connections are specified in the
; 0000 005E // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 005F // RS - PORTC Bit 0
; 0000 0060 // RD - PORTC Bit 2
; 0000 0061 // EN - PORTC Bit 1
; 0000 0062 // D4 - PORTC Bit 4
; 0000 0063 // D5 - PORTC Bit 5
; 0000 0064 // D6 - PORTC Bit 6
; 0000 0065 // D7 - PORTC Bit 7
; 0000 0066 // Characters/line: 16
; 0000 0067 lcd_init(16);
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0068 
; 0000 0069 // Global enable interrupts
; 0000 006A #asm("sei")
;PCODE: $00000042 VOL: 0
	sei
;PCODE: $00000043 VOL: 0
; 0000 006B start=0;
;PCODE: $00000044 VOL: 0
; 0000 006C 
; 0000 006D while (1)
;PCODE: $00000045 VOL: 0
; 0000 006E       {
; 0000 006F       // Place your code here
; 0000 0070       cycle:
;PCODE: $00000046 VOL: 0
; 0000 0071       while(start==0)
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0072         {
; 0000 0073         PORTA=0b00010000;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0074         sprintf(text,"Siklus : %d",add);
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0075         lcd_gotoxy(0,0);
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0076         lcd_puts(text);
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0077         goto cycle;
;PCODE: $0000005E VOL: 0
; 0000 0078         }
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0079 
; 0000 007A       if(add==0)
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 007B         {
; 0000 007C         start=0;
;PCODE: $00000063 VOL: 0
; 0000 007D         goto cycle;
;PCODE: $00000064 VOL: 0
; 0000 007E         }
; 0000 007F 
; 0000 0080       else if(add>=1)
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0081         {
; 0000 0082         shutdown=1;
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 0083         lcd_clear();
;PCODE: $0000006B VOL: 0
; 0000 0084         goto inflow;
;PCODE: $0000006C VOL: 0
; 0000 0085         }
; 0000 0086 
; 0000 0087       inflow:
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0088       start=0;
;PCODE: $00000070 VOL: 0
; 0000 0089       sprintf(text,"Siklus : %d",add);
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 008A       lcd_gotoxy(0,0);
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 008B       lcd_puts(text);
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 008C       lcd_gotoxy(0,1);
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 008D       lcd_putsf("Isi Tank");
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 008E       PORTA=0b00010011;
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 008F       if(shutdown==0)
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 0090         {
; 0000 0091         lcd_clear();
;PCODE: $0000008E VOL: 0
; 0000 0092         goto emergency;
;PCODE: $0000008F VOL: 0
; 0000 0093         }
; 0000 0094 
; 0000 0095       else if(start==1)
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0096         {
; 0000 0097         start=0;
;PCODE: $00000094 VOL: 0
; 0000 0098         PORTA=0b00010000;
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0099         lcd_clear();
;PCODE: $00000097 VOL: 0
; 0000 009A         lcd_gotoxy(0,0);
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 009B         lcd_putsf("BREAK!");
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 009C         loop1:
;PCODE: $0000009F VOL: 0
; 0000 009D         if(start==1)
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 009E             {
; 0000 009F             lcd_clear();
;PCODE: $000000A3 VOL: 0
; 0000 00A0             goto inflow;
;PCODE: $000000A4 VOL: 0
; 0000 00A1             }
; 0000 00A2         goto loop1;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 00A3         }
; 0000 00A4 
; 0000 00A5       else if(PINE.2==1)
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 00A6         {
; 0000 00A7         lcd_clear();
;PCODE: $000000AB VOL: 0
; 0000 00A8         goto htr_stir;
;PCODE: $000000AC VOL: 0
; 0000 00A9         }
; 0000 00AA 
; 0000 00AB       else
;PCODE: $000000AD VOL: 0
; 0000 00AC         {
; 0000 00AD         goto inflow;
;PCODE: $000000AE VOL: 0
; 0000 00AE         }
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 00AF 
; 0000 00B0       htr_stir:
;PCODE: $000000B2 VOL: 0
; 0000 00B1       start=0;
;PCODE: $000000B3 VOL: 0
; 0000 00B2       sprintf(text,"Siklus : %d",add);
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 00B3       lcd_gotoxy(0,0);
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 00B4       lcd_puts(text);
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 00B5       lcd_gotoxy(0,1);
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 00B6       lcd_putsf("Aduk");
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 00B7       PORTA=0b00001000;
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 00B8       if(shutdown==0)
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 00B9         {
; 0000 00BA         lcd_clear();
;PCODE: $000000D1 VOL: 0
; 0000 00BB         goto emergency;
;PCODE: $000000D2 VOL: 0
; 0000 00BC         }
; 0000 00BD 
; 0000 00BE       else if(start==1)
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 00BF         {
; 0000 00C0         start=0;
;PCODE: $000000D7 VOL: 0
; 0000 00C1         PORTA=0b00010000;
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 00C2         lcd_clear();
;PCODE: $000000DA VOL: 0
; 0000 00C3         lcd_gotoxy(0,0);
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 00C4         lcd_putsf("BREAK!");
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 00C5         loop2:
;PCODE: $000000E2 VOL: 0
; 0000 00C6         if(start==1)
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 00C7             {
; 0000 00C8             lcd_clear();
;PCODE: $000000E6 VOL: 0
; 0000 00C9             goto htr_stir;
;PCODE: $000000E7 VOL: 0
; 0000 00CA             }
; 0000 00CB         goto loop2;
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 00CC         }
; 0000 00CD 
; 0000 00CE       else if(PINE.1==0)
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 00CF         {
; 0000 00D0         lcd_clear();
;PCODE: $000000EE VOL: 0
; 0000 00D1         goto outflow;
;PCODE: $000000EF VOL: 0
; 0000 00D2         }
; 0000 00D3 
; 0000 00D4       else
;PCODE: $000000F0 VOL: 0
; 0000 00D5         {
; 0000 00D6         goto htr_stir;
;PCODE: $000000F1 VOL: 0
; 0000 00D7         }
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 00D8 
; 0000 00D9       outflow:
;PCODE: $000000F5 VOL: 0
; 0000 00DA       start=0;
;PCODE: $000000F6 VOL: 0
; 0000 00DB       sprintf(text,"Siklus : %d",add);
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 00DC       lcd_gotoxy(0,0);
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0000 00DD       lcd_puts(text);
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 00DE       lcd_gotoxy(0,1);
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 00DF       lcd_putsf("Buang");
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 00E0       PORTA=0b00010100;
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 00E1       if(shutdown==0)
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 00E2         {
; 0000 00E3         lcd_clear();
;PCODE: $00000114 VOL: 0
; 0000 00E4         goto emergency;
;PCODE: $00000115 VOL: 0
; 0000 00E5         }
; 0000 00E6 
; 0000 00E7       else if(start==1)
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 00E8         {
; 0000 00E9         start=0;
;PCODE: $0000011A VOL: 0
; 0000 00EA         PORTA=0b00010000;
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 00EB         lcd_clear();
;PCODE: $0000011D VOL: 0
; 0000 00EC         lcd_gotoxy(0,0);
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 00ED         lcd_putsf("Istirahat");
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 00EE         loop3:
;PCODE: $00000125 VOL: 0
; 0000 00EF         if(start==1)
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
; 0000 00F0             {
; 0000 00F1             lcd_clear();
;PCODE: $00000129 VOL: 0
; 0000 00F2             goto outflow;
;PCODE: $0000012A VOL: 0
; 0000 00F3             }
; 0000 00F4         goto loop3;
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 00F5         }
; 0000 00F6 
; 0000 00F7       else if(PINE.0==0)
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
; 0000 00F8         {
; 0000 00F9         if(add==0)
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0000 00FA             {
; 0000 00FB             lcd_clear();
;PCODE: $00000133 VOL: 0
; 0000 00FC             goto cycle;
;PCODE: $00000134 VOL: 0
; 0000 00FD             }
; 0000 00FE         else if(add>0)
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 00FF             {
; 0000 0100             add-=1;
;PCODE: $00000139 VOL: 0
; 0000 0101             if(add==0)
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 0102                 {
; 0000 0103                 lcd_clear();
;PCODE: $0000013C VOL: 0
; 0000 0104                 goto cycle;
;PCODE: $0000013D VOL: 0
; 0000 0105                 }
; 0000 0106             else
;PCODE: $0000013E VOL: 0
; 0000 0107                 {
; 0000 0108                 lcd_clear();
;PCODE: $0000013F VOL: 0
; 0000 0109                 goto inflow;
;PCODE: $00000140 VOL: 0
; 0000 010A                 }
;PCODE: $00000141 VOL: 0
; 0000 010B             }
; 0000 010C         }
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
; 0000 010D 
; 0000 010E       else
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
; 0000 010F         {
; 0000 0110         goto outflow;
;PCODE: $00000146 VOL: 0
; 0000 0111         }
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 0112 
; 0000 0113       emergency:
;PCODE: $0000014A VOL: 0
; 0000 0114       lcd_gotoxy(0,0);
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0000 0115       lcd_putsf("Emergency!!!");
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
; 0000 0116       PORTA=0b01110000;
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0000 0117       loop4:
;PCODE: $00000154 VOL: 0
; 0000 0118       goto loop4;
;PCODE: $00000155 VOL: 0
; 0000 0119 
; 0000 011A       }
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
; 0000 011B }
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
