*******************************************************
Chip type               : ATmega128
Program type            : Application
AVR Core Clock frequency: 10,000000 MHz
Memory model            : Small
External RAM size       : 0
Data Stack size         : 1024
*******************************************************/

#include <stdio.h>

// Definisi state
enum State {
    STATE_CYCLE,
    STATE_INFLOW,
    STATE_HTR_STIR,
    STATE_OUTFLOW,
    STATE_EMERGENCY
};

int main() {
    // Inisialisasi variabel
    enum State currentState = STATE_CYCLE;
    int start = 0;
    int shutdown = 0;
    int add = 1; // Contoh nilai awal
    int PINE = 0; // Contoh nilai awal (asumsikan PINE adalah register input)
    int PORTA = 0; // Contoh register output

    while (1) {
        switch (currentState) {
            // State: CYCLE
            case STATE_CYCLE:
                PORTA = 0b00010000; // Menunggu start
                if (start == 1) {
                    if (add == 0) {
                        start = 0; // Kembali ke CYCLE jika add = 0
                    } else if (add >= 1) {
                        shutdown = 1;
                        currentState = STATE_INFLOW; // Pindah ke INFLOW
                    }
                }
                break;

            // State: INFLOW
            case STATE_INFLOW:
                start = 0;
                PORTA = 0b00010011; // Mengaktifkan inflow
                if (shutdown == 0) {
                    currentState = STATE_EMERGENCY; // Pindah ke EMERGENCY
                } else if (start == 1) {
                    start = 0;
                    PORTA = 0b00010000; // Berhenti sementara
                    while (start != 1) {
                        // Tunggu start ditekan lagi
                    }
                    currentState = STATE_INFLOW; // Lanjutkan INFLOW
                } else if (PINE & 0b00000100) { // Cek PINE.2
                    currentState = STATE_HTR_STIR; // Pindah ke HTR_STIR
                }
                break;

            // State: HTR_STIR
            case STATE_HTR_STIR:
                start = 0;
                PORTA = 0b00001000; // Mengaktifkan heater dan stirrer
                if (shutdown == 0) {
                    currentState = STATE_EMERGENCY; // Pindah ke EMERGENCY
                } else if (start == 1) {
                    start = 0;
                    PORTA = 0b00010000; // Berhenti sementara
                    while (start != 1) {
                        // Tunggu start ditekan lagi
                    }
                    currentState = STATE_HTR_STIR; // Lanjutkan HTR_STIR
                } else if (!(PINE & 0b00000010)) { // Cek PINE.1
                    currentState = STATE_OUTFLOW; // Pindah ke OUTFLOW
                }
                break;

            // State: OUTFLOW
            case STATE_OUTFLOW:
                start = 0;
                PORTA = 0b00010100; // Mengaktifkan outflow
                if (shutdown == 0) {
                    currentState = STATE_EMERGENCY; // Pindah ke EMERGENCY
                } else if (start == 1) {
                    start = 0;
                    PORTA = 0b00010000; // Berhenti sementara
                    while (start != 1) {
                        // Tunggu start ditekan lagi
                    }
                    currentState = STATE_OUTFLOW; // Lanjutkan OUTFLOW
                } else if (!(PINE & 0b00000001)) { // Cek PINE.0
                    if (add == 0) {
                        currentState = STATE_CYCLE; // Kembali ke CYCLE
                    } else if (add > 0) {
                        add--;
                        if (add == 0) {
                            currentState = STATE_CYCLE; // Kembali ke CYCLE
                        } else {
                            currentState = STATE_INFLOW; // Lanjutkan ke INFLOW
                        }
                    }
                }
                break;

            // State: EMERGENCY
            case STATE_EMERGENCY:
                PORTA = 0b01110000; // Mengaktifkan mode emergency
                while (1) {
                    // Infinite loop untuk emergency
                }
                break;

            // Default case (jika terjadi kesalahan)
            default:
                currentState = STATE_CYCLE; // Kembali ke CYCLE
                break;
        }
    }

    return 0;
}
